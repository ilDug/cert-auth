
name: Docker Image CI (build, tag, push)

on:
  release:
    types: [published]

  push:
    tags:  ['*']

  workflow_dispatch:
  

    
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ildug/cert-auth
  


jobs:

  build_push_image:
    name: Build, tag and push to Github Container Registry
    runs-on: ubuntu-latest

    outputs: 
    # salva il tag del commit in una variabile di job
      docker_tag: ${{ steps.tag.outputs.VERSION }}

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Get Tags
      id: tag
      uses: ildug/get-tag-action@v1 

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push image
      run: |
        docker buildx create --driver docker-container --use
        docker buildx build . \
              --file Dockerfile.prod \
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.tag.outputs.major }} \
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.major }} \
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}\
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }} \
              --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} \
              --platform linux/amd64,linux/arm64 \
              --push
      
    # - name: Push to GHRC.IO
    #   # run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    #   run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


# docker buildx create --name dagBuilder --driver docker-container --use


# docker buildx build . --file Dockerfile.prod --tag cert-auth:latest --tag cert-auth:v1.1.0 --platform linux/amd64,linux/arm64 
      
    # - name: Build and push
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: .
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: |
    #       user/app:latest
    #       user/app:1.0.0
    #       ghcr.io/user/app:latest
    #       ghcr.io/user/app:1.0.0
